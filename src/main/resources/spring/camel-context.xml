<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <!-- Camel Routes -->
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <!--
          A route to generate a random order every 5th second.

          When this route is started, it will automatically send xml messages to the JMS queue incomingOrders on the
          ActiveMQ broker.

          The <log/> elements are used to add human-friendly business logging statements. They make it easier to see what the
          route is doing.

          The amq component ensures to use the broker in the kubernetes cluster.
        -->
        <route id="generate-order-route" streamCache="true">
            <from id="route-timer" uri="timer:order?period=3000"/>
            <to id="_to1" uri="restlet:http://simple-emp-timerecords-lademoproject.apps.dev.openshift.opentlc.com/timerecords/{empId}?restletMethod=get"/>
            <to id="route-to-incoming-orders" uri="amq:incomingOrders"/>
        </route>
        <!--
          This route consumes messages from the JMS queue incomingOrders on the ActiveMQ broker within the ESB.

          The <choice/> element contains the content based router. The two <when/> clauses use XPath to define the criteria
          for entering that part of the route. When the country in the XML message is set to UK or US, the message will follow
          the specific rules defined for that country. The <otherwise/> element ensures that any message that does not meet the
          requirements for either of the <when/> elements will follow another route.
        -->
        <route id="jms-cbr-route" streamCache="true">
            <from id="route-from-incoming-orders" uri="amq:incomingOrders"/>
            <to id="_to1" uri="http://simple-employee-details-lademoproject.apps.dev.openshift.opentlc.com/employees/{empId}?restletMethod=get"/>
        </route>
    </camelContext>
</beans>
